pipeline {
    agent any
    
    tools {
        jdk 'JAVA11'
        maven 'mv392'
    }

    environment{
        REGISTRYLOCATION = "https://www.google.com/"
    }
    
     stages {
           stage('Initialize'){
            steps{
                script{
                        echo "Inicializando"
                        sh 'java --version'
                        sh "mvn -version"
                    }
                }
             }
            stage('resolver dependencias'){
            steps{
                script{
                        dir("services/EjemploMaven/"){
                            echo "Generando Dependencias"
                            sh "mvn dependency:resolve"
                            sh "mvn package"
                            sh "mvn install"                            
                        }
                        
                    }
                }
             }
            stage('generar documentacion'){
            steps{
                script{
                        dir("services/EjemploMaven2/"){
                            echo "Generando Documentacion"
                            sh "mvn dependency:resolve"
                            sh 'mvn pmd:pmd'
                            sh "mvn checkstyle:checkstyle"
                            sh "mvn javadoc:javadoc"
                            sh "mvn site:site"
                            
                        }
                        
                    }
                }
             }
             stage('Analisis de codigo estatico'){
            steps{
                script{
                        dir("services/EjemploMaven2/"){
                            echo "Analizando c√≥digo"
                            withCredentials([usernamePassword(credentialsId: 'SONARTOKEN', passwordVariable: 'secret', usernameVariable: 'user')]) {
                            sh "mvn clean verify sonar:sonar -Dsonar.login=$secret"
                            }
                            
                        }
                        
                    }
                }
             }
     }
    
}